<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.6</version>
		<relativePath />
	</parent>
	<groupId>skyglass</groupId>
	<artifactId>product-service</artifactId>
	<version>1.0.0</version>
	<name>product-service</name>
	<description>Product Service</description>

	<properties>
		<java.version>11</java.version>	
		<mapstruct.version>1.4.2.Final</mapstruct.version>			
	</properties>
	
    <dependencyManagement>
        <dependencies>
            
			<dependency>
			    <groupId>org.springframework.cloud</groupId>
			    <artifactId>spring-cloud-dependencies</artifactId>
			    <version>2020.0.3</version>
			    <type>pom</type>
			    <scope>import</scope>
			</dependency>             
        </dependencies>
    </dependencyManagement>	

	<dependencies>
        <dependency>
            <groupId>skyglass</groupId>
            <artifactId>books-online-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>skyglass</groupId>
            <artifactId>books-online-util</artifactId>
            <version>${project.version}</version>
        </dependency>	        	
	
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>io.opentracing.contrib</groupId>
		    <artifactId>opentracing-spring-jaeger-cloud-starter</artifactId>
		    <version>3.3.1</version>
		</dependency>
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb-reactive</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-rabbit</artifactId>
        </dependency>        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-stream-kafka</artifactId>
        </dependency>           

        <dependency>
            <groupId>org.springframework.retry</groupId>
            <artifactId>spring-retry</artifactId>
        </dependency>
        <dependency>
            <groupId>io.micrometer</groupId>
            <artifactId>micrometer-registry-prometheus</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.mapstruct</groupId>
            <artifactId>mapstruct</artifactId>
            <version>${mapstruct.version}</version>
        </dependency>                        
        
        
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
 		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-client</artifactId>
		</dependency>	       
        
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-test-support</artifactId>
            <scope>test</scope>
        </dependency>        

        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <dependency>
            <groupId>de.flapdoodle.embed</groupId>
            <artifactId>de.flapdoodle.embed.mongo</artifactId>
            <scope>test</scope>
        </dependency>

	</dependencies>

           <build>
                <plugins>
                    <plugin>
                        <groupId>org.springframework.boot</groupId>
                        <artifactId>spring-boot-maven-plugin</artifactId>
                        <configuration>
                            <addResources>true</addResources>
                        </configuration>
                    </plugin>
                    
					<plugin>
					    <groupId>org.apache.maven.plugins</groupId>
					    <artifactId>maven-compiler-plugin</artifactId>
					    <configuration>
					        <source>${java.version}</source>
					        <target>${java.version}</target>
					        <annotationProcessorPaths>
					            <path>
					                <groupId>org.mapstruct</groupId>
					                <artifactId>mapstruct-processor</artifactId>
					                <version>${mapstruct.version}</version>
					            </path>
					        </annotationProcessorPaths>
					    </configuration>
					</plugin>
                    
                    
					<!-- Docker Spotify Plugin -->
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>dockerfile-maven-plugin</artifactId>
						<version>1.4.13</version>
						<executions>
							<execution>
								<id>default</id>
								<goals>
									<goal>build</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<repository>skyglass/${project.name}</repository>
							<tag>${project.version}</tag>
							<skipDockerInfo>true</skipDockerInfo>
						</configuration>
					</plugin>	                    
                </plugins>
            </build>

</project>